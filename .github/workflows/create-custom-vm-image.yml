name: Create Custom VM Image

on:
  workflow_dispatch:

permissions:
  id-token: write

jobs:
  deploy-infra-dev:
    runs-on: ubuntu-latest
    environment: dev
    outputs:
      galleryName: ${{ steps.deploy.outputs.galleryName }}
      imageBuilderIdentityName: '${{ steps.deploy.outputs.imageBuilderName }}'
    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.7  

    - name: Login via Az module
      uses: azure/login@v2.1.1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  
    - name: Generate Deployment Name
      id: deploymentName
      run: |
        deploymentName="deployment-gh-${{ github.run_id }}"  
        echo "deploymentName=$deploymentName" >> "$GITHUB_OUTPUT"

    - name: Validate Bicep file
      env:
        deploymentName: ${{ steps.deploymentName.outputs.deploymentName }}
        resourceGroupName: ${{ vars.RESOURCE_GROUP }}
      run: |
        az deployment group validate --only-show-errors -n $deploymentName -g $resourceGroupName --template-file ./infra/main.bicep > /dev/null

    - name: Run What-If Deployment
      env:
        deploymentName: ${{ steps.deploymentName.outputs.deploymentName }}
        resourceGroupName: ${{ vars.RESOURCE_GROUP }}
      run: |
        az deployment group what-if --only-show-errors --no-pretty-print -n $deploymentName -g $resourceGroupName --template-file ./infra/main.bicep > /dev/null

    - name: Deploy Bicep file
      uses: azure/arm-deploy@v2
      id: deploy
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ vars.RESOURCE_GROUP }}
        template: ./infra/main.bicep
        parameters: 'location=${{ vars.LOCATION }} catalogs=@catalogs.json'
        failOnStdErr: false
        deploymentName: ${{ steps.deploymentName.outputs.deploymentName }}
        scope: 'resourcegroup'

    - uses: actions/github-script@v7
      id: setEnvVars
      with:
        result-encoding: string
        retries: 3
        retry-exempt-status-codes: 400,401
        script: |
          const environment = 'dev'
          const galleryName = '${{ steps.deploy.outputs.galleryName }}'
          const devCenterName = '${{ steps.deploy.outputs.devCenterName }}'
          const imageBuilderIdentityName = '${{ steps.deploy.outputs.imageBuilderName }}'
          const owner = '${{ github.repository_owner }}'
          const repository = '${{ github.repository }}'.split('/')[1]

          github.request(`POST /repos/${owner}/${repository}/environments/${environment}/variables`, {
            owner: owner,
            repo: repository,
            environment_name: environment,
            name: 'galleryName',
            value: galleryName,
            headers: {
              'X-GitHub-Api-Version': '2022-11-28'
            }
          })
          github.request(`POST /repos/${owner}/${repository}/environments/${environment}/variables`, {
            owner: owner,
            repo: repository,
            environment_name: environment,
            name: 'devCenterName',
            value: devCenterName,
            headers: {
              'X-GitHub-Api-Version': '2022-11-28'
            }
          })